{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","gif","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OAAQ,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAQP,GAAR,mBAAsBO,OACpCN,EAAc,MAKV,SACJ,uBACQO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,QCPlBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAClC,OACI,sBAAKC,UAAU,gDAAf,UAGG,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCRFK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,0DAE4CO,UAAUF,GAFtD,sDAGIG,MAAMR,GAHV,cAGbS,EAHa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EAExB,MAAO,CAAChB,GAAGgB,EAAIhB,GACdC,MAAMe,EAAIf,MACVC,IAAG,UAACc,EAAIC,cAAL,aAAC,EAAYC,iBAAiBhB,QAVlB,kBAcXY,GAdW,4CAAH,sDCMPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAErB,ECHsB,SAACA,GAEvB,MAA0BrB,mBAAS,CAC/B2B,KAAK,GACLO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAW,WAEPjB,EAAQC,GAAUiB,MAAK,SAACC,GAEfH,EACL,CACIT,KAAKY,EACLL,SAAQ,SASjB,CAACb,IAEGc,EDtBsBK,CAAanB,GAA9BkB,EAAZ,EAAOZ,KAAWO,EAAlB,EAAkBA,QAClB,OACI,sBAAKjB,UAAU,YAAf,UACI,oBAAIA,UAAU,WAAd,SAA2BI,IAE1Ba,GAAW,6CAERK,EAAKV,KAAI,SAACY,GAAD,OACb,cAAC,EAAD,eAA8BA,GAAZA,EAAI3B,WEQnB4B,EApBM,WAEjB,MAAoC1C,mBAAS,CAAC,kBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACA,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEI4C,EAAWd,KAAI,SAAAR,GAAQ,OACvB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCX1BuB,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.9c990464.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n        setCategories((cat)=>[inputValue,...cat]);\r\n        setInputValue('');\r\n\r\n        }\r\n}\r\n\r\n    return (<form onSubmit={handleSubmit}>\r\n        <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n        />\r\n    </form>)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeftBig\">\r\n           {/* es className porque class palabra reservada\r\n           de js */}\r\n           <img src={url} alt={title}></img>\r\n           <p>{title}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category)=>{\r\n    //encodeURI reemplaza espacios bla bla para q quede perfect\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=56HXclh0Dp0ET7W2c9JxyGGn6JX4Vsh9`;\r\n    const response = await fetch(url); //peticion->promesa\r\n    const {data} = await response.json(); // traduce el json\r\n    \r\n    const gifs = data.map(gif=>{\r\n\r\n       return {id:gif.id,\r\n        title:gif.title,\r\n        url:gif.images?.downsized_medium.url}\r\n\r\n    })\r\n     //console.log(gifs);\r\n     return gifs;\r\n    }","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:imgs, loading} = useFetchGifs(category);\r\n    return (\r\n        <div className='card-grid'>\r\n            <h3 className='category' >{category}</h3>        \r\n                {/* Recordar que es lo mismo que loading ? esto : null */}\r\n            {loading && <p>Loading. . .</p>}\r\n            {\r\n                imgs.map((img)=>\r\n            <GifGridItem key={img.id} {...img}/>)\r\n            }\r\n\r\n         </div>\r\n        // /*para no pasar img={img}, se puede pasar\r\n        // las prop con spread operator*/\r\n        \r\n   )}\r\n\r\n","//Custom hook: funcionan como functional components\r\n//tienen efectos,estados.. . .\r\n//empieza con use porque quiere decir q es un hook\r\nimport {useState, useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs'\r\nexport const useFetchGifs=(category)=>{\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n\r\n        getGifs(category).then((imgs)=>{\r\n            \r\n                 setState(\r\n            {\r\n                data:imgs,\r\n                loading:false\r\n            }\r\n            );\r\n            \r\n           \r\n        }\r\n            \r\n        );\r\n\r\n    }, [category]);\r\n    \r\n    return state;\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GitExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['Ariana Grande'])\r\n\r\n    return (\r\n        <>\r\n        <h2>GitExpertApp</h2>\r\n        <hr/>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <ul>\r\n            {\r\n            categories.map(category => \r\n            <GifGrid key={category} category={category} />)\r\n            }\r\n        </ul>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default GitExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GitExpertApp from './GitExpertApp'\n\nReactDOM.render(\n\n  <GitExpertApp />,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}